### Carga paquetes
pacman::p_load(
  rio,
  janitor,
  GGally,
  gtsummary,
  performance,
  tidyverse
  )


### Carga datos
datos <- import("../cancer_reg.csv") |> 
  
  select(geography,
         tasa_mortalidad = target_deathrate,
         mediana_edad = medianage,
         mediana_ingresos = medincome,
         mediana_ingresos_cat = binnedinc,
         pct_pobreza = povertypercent,
         pct_salud_publica = pctpubliccoveragealone,
         pct_sec_incompleta = pctnohs18_24,
         pct_desempleo = pctunemployed16_over
         ) |> 
  
  # Filtra datos con errores de carga
  filter(mediana_edad <=99) |> 
  
  
  # Separa geografía
  separate_wider_delim(cols = geography, delim = ", ", 
                       names = c("condado", "estado")) |> 
  
  # Filtra condados del Noreste
  filter(estado %in% c("Connecticut", "Maine", "Massachusetts", 
                       "New Hampshire", "Rhode Island", "Vermont",
                       "New Jersey", "New York", "Pennsylvania")) |> 
  
  # Transforma decimales
  mutate(across(where(is.numeric), .fns = ~ round(.x,2))) |> 

  # Categoriza edad
  mutate(mediana_edad_cat = gtools::quantcut(mediana_edad,
                                             labels = c("23-35 años",
                                                        "36-39 años",
                                                        "40-45 años",
                                                        "45+ años")), 
         .after = mediana_edad) |> 
  
  # Elimina NAs
  drop_na()


## Guarda base
export(datos, "../cancer_USA.txt", delim = ";")


# Explora datos -----------------------------------------------------------
glimpse(datos)

skimr::skim(datos)

## Análisis VR
# Histograma
datos |> 
  ggplot(aes(x = tasa_mortalidad)) +
  
  geom_histogram(fill = "orange") +
  
  theme_minimal()

# qqplot
datos |> 
  ggplot(aes(sample = tasa_mortalidad)) + 
  
  geom_qq() +
  geom_qq_line() +
  
  theme_minimal()

# Boxplot
datos |> 
  ggplot(aes(x = mediana_edad_cat, y = tasa_mortalidad, fill = mediana_edad_cat)) +
  
  geom_boxplot() +
  
  theme_minimal()


## Correlación
# ggpairs
datos |> 
  select(where(is.numeric)) |> 
  
  ggpairs()

# correlograma
datos |> 
  select(where(is.numeric)) |> 

    ggcorr()


## Modelos regresión simple
datos |> 
  tbl_uvregression(y = tasa_mortalidad,
                   include = c(mediana_edad, mediana_ingresos, pct_pobreza,
                               pct_salud_publica, pct_desempleo, pct_sec_incompleta),
                   method = lm) |> 
  
  bold_p()


## Modelo simple para edad
mod1 <- lm(tasa_mortalidad ~ mediana_edad, data = datos)

summary(mod1)

anova(mod1)

check_model(mod1)

check_normality(mod1)

check_heteroscedasticity(mod1)

check_outliers(mod1)

# Modelo simple para ingresos
mod2 <- lm(tasa_mortalidad ~ mediana_ingresos, data = datos)

summary(mod2)

anova(mod2)

check_model(mod2)

check_normality(mod2)

check_heteroscedasticity(mod2)

check_outliers(mod2)

# Modelo simple para pobreza
mod3 <- lm(tasa_mortalidad ~ pct_pobreza, data = datos)

summary(mod3)

anova(mod3)

check_model(mod3)

check_normality(mod3)

check_heteroscedasticity(mod3)

check_outliers(mod3)

# Modelo simple para cobertura salud pública
mod4 <- lm(tasa_mortalidad ~ pct_salud_publica, data = datos)

summary(mod4)

anova(mod4)

check_model(mod4)

check_normality(mod4)

check_heteroscedasticity(mod4)

check_outliers(mod4)

# Modelo simple para desempleo
mod5 <- lm(tasa_mortalidad ~ pct_desempleo, data = datos)

summary(mod5)

anova(mod5)

check_model(mod5)

check_normality(mod5)

check_heteroscedasticity(mod5)

check_outliers(mod5)

# Modelo simple para secundaria incompleta
mod6 <- lm(tasa_mortalidad ~ pct_sec_incompleta, data = datos)

summary(mod6)

anova(mod6)

check_model(mod6)

check_normality(mod6)

check_heteroscedasticity(mod6)

check_outliers(mod6)