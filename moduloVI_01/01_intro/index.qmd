---
format: 
  revealjs: 
    chalkboard: true
    logo: logos_ine.png
    incremental: false
    slide-number: true
    #footer: "Programa de Maestría en Epidemiología para la Salud Pública"
    css: custom.css
---

```{r}
#| echo: false
# Configuración global
knitr::opts_chunk$set(echo = FALSE,
                      warning = FALSE,
                      message = FALSE,
                      fig.align = "center")

# Paquetes necesarios
pacman::p_load(
  flextable,
  patchwork,
  rio,
  janitor,
  tidyverse
)
```

## Módulo VI: Análisis Epidemiológico Avanzado {.center style="text-align: center;"}

:::: {style="margin-top: 1.5em;"}
Docentes: Tamara Ricardo, Christian Ballejo

::: {style="font-size: .75em; margin-bottom: 1.5em;"}
Programa de Maestría en Epidemiología para la Salud Pública
:::

![](logos_ine.png){fig-align="center" width="70%"}
::::

## OBJETIVOS DE LA UNIDAD

::: incremental
-   **Desarrollar habilidades en el uso de la estadística** como herramienta para la investigación epidemiológica.

-   **Adquirir competencias básicas en R y RCommander** para realizar análisis de datos en salud pública.

-   Aprender a ajustar, interpretar y evaluar modelos de **regresión lineal simple y múltiple**.

-   **Comprender los conceptos de confusión e interacción**, el abordaje durante el análisis y su impacto en la interpretación de resultados.

:::


## PROGRAMA DE LA UNIDAD

::: {style="margin-top: 2em;"}
```{r}
# Genera datos para la tabla 
tibble(Semana = c(rep("30 oct. al 03 nov. 2024", 2), 
                  rep("06 al 09 nov. 2024", 2),
                  "13 al 16 nov. 2024", ""),      
          
      Tema = c("- Introducción a los Paquetes y Lenguajes Estadístico. Diferencias entre interfaces gráficas (GUI) y de línea de comandos (CLI). Comparativa entre software privativo y gratuito/open source.",
               "- R y R-Commander. Navegación del menú. Lectura e importación de archivos de datos. Estadística descriptiva. Agrupamiento de variables. Manejo de factores. Guardado de scripts y resultados. Paquetes y plugins.",
               "- Relación entre variables numéricas. Covarianza y representación gráfica. Limitaciones. Correlación de Pearson: interpretación del signo y la magnitud.Visualización con correlogramas. Métodos no paramétricos: correlación de Spearman y de Kendall.",
               "- Introducción al Modelado Estadístico. Modelo lineal general: concepto y supuestos. Bondad de ajuste y análisis de residuos. Regresión lineal simple y análisis de la varianza (ANOVA). Interpretación de los resultados.",
               "- Regresión Lineal Múltiple. Selección de variables explicativas y control de multicolinealidad. Análisis e interpretación de residuos.",
               "- Confusión e Interacción. Identificación y roles de las covariables. Control y detección de la confusión. Interpretación de resultados en presencia de interacción.")
      ) |>    
  
  #  Genera tabla    
  flextable() |>    
  bold(part = "header") |> 
  fontsize(size = 16, part = "all") |>   
  merge_v() |>  
  color(i = 3:6, color = "gray40") |> 
  highlight(i = 1:2, color = "#FFB90F") |> 
  autofit() 
```
:::

## ESTRUCTURA DE LA CLASE

::: {style="margin-top: 2em;"}
```{r}
# Genera datos para la tabla
tibble(
  Horario = c("18:30hs", 
             "18:40hs", 
             "20:00hs",
             "20:15hs", 
             "21:30hs"),
  
  Descripción = c("Ingreso a la videollamada", 
                  "Inicio de la clase",
                  "Receso", 
                  "Continuación clase", 
                  "Cierre")
) |> 
  
  #  Genera tabla    
  flextable() |>    
  bold(part = "header") |> 
  fontsize(size = 20, part = "all") |>   
  merge_v() |>  
  autofit() 

```
:::

## OBJETIVOS DE HOY

::: incremental
-   Conocer las características de las diferentes clases de softwares y lenguajes estadísticos.

- Entender el esquema de trabajo de R + RCommander relacionado a sus paquetes y plugins, importación de datos y almacenamiento de sus archivos de trabajo

-   Desarrollar habilidades básicas en el análisis estadístico utilizando R + RCommander.

:::

## INTRODUCCIÓN {transition="zoom"}

![](images/epi_info.webp){.absolute top=200 left=0 width="15%"}

![](images/ibm-spss-logo.png){.absolute top=450 left=40 width="20%"}

![](images/Julia_Programming_Language_Logo.svg.png){.absolute top=150 left=230 width="20%"}

![](images/Logo-sas-FINAL-1.png){.absolute top=210 left=600 width="20%"}

![](images/Logo-stata-FINAL-1.png){.absolute top=330 left=800 width="20%"}

![](images/logo_epidat.webp){.absolute top=500 left=700 width=15%"}

![](images/python.webp){.absolute top=140 left=800 width="30%"}

![](images/R.png){.absolute top=380 left=370 width="25%"}

## INTRODUCCIÓN 

::: incremental
- Existen numerosos paquetes y lenguajes estadísticos actualmente disposición. 

- Algunos propietarios o privativos con licencias de alto costo y otros gratuitos y/o open source (fuente abierta).

- Los softwares privativos son desarrollados y comercializados por una empresa. Sólo ellos  pueden modificar el código fuente y sus funciones. 
  - Ejemplo: SPSS, Stata, SAS, etc
  
:::
  
## INTRODUCCIÓN 

::: incremental

- Los softwares gratuitos que son de libre uso, desarrollados por organizaciones o empresas. Sólo ellos pueden modificar el código fuente y sus funciones. 
  - Ejemplo: EpiInfo, EpiDat, Jamovi, etc
  
- Los open source que son abiertos, por lo tanto no tienen dueño. Cualquier usuario puede acceder al código fuente y modificarlo. 
  - Ejemplo: lenguaje R, python, julia, etc
  
:::

## TIPO DE INTERFAZ

::: incremental

- **GUI (Graphical User Interface)**:  interfaz gráfica con menúes. 

  - El usuario interactúa con el sistema (íconos y botones). 
  - Es intuitiva y facil de usar, pero tiene potencia limitada y no reproducible

- **CLI (Command Line Interface)**: interfaz por línea de comandos

  - No es interactiva (no hay botones e íconos)
  - Sintaxis de texto muy precisa y reproducible (mediante scripts)

:::

## CURVAS DE APRENDIZAJE

- `GUI`: curva de aprendizaje inicial muy rápida. Luego pierde la capacidad de realizar tareas nuevas.

<br>

. . . 

- `CLI`: curva de aprendizaje lenta inicialmente, a largo plazo las posibilidades de combinar y automatizar procesos permite una versatilidad mucho mayor y por lo tanto un mayor potencial creativo.

## CURVAS DE APRENDIZAJE

![](images/gui_vs_cli.jpg){fig-align="center" width="60%"}

## ENCUESTA INICIAL

<br>

::: {.fragment .fade-down}

**Software estadístico**

![](images/Encuesta_R2.PNG){fig-align="center" width="100%"}

:::

## ENCUESTA INICIAL

<br>

::: {.fragment .fade-up}

**Lenguaje R**

![](images/Encuesta_R1.PNG){fig-align="center" width="100%"}

:::

## LENGUAJE R

::: {.fragment .fade-in-then-semi-out}

- Lenguaje y entorno de software libre orientado a estadística 

:::

::: {.fragment .fade-in-then-semi-out}

- Open source y multiplapaforma

:::

::: {.fragment .fade-in-then-semi-out}

- Numerosas librerías de extensión (paquetes) 

:::

::: {.fragment .fade-in-then-semi-out}

- Amplia y activa comunidad de usuarios

:::

::: {.fragment .fade-in-then-semi-out}

- Interfaz por línea de comandos

:::

## LENGUAJE R

::: {.fragment .fade-in-then-semi-out}

- Desarrollado por Ross Ihaka y Robert Gentleman de la Universidad de Auckland, Nueva Zelanda en 1995

:::

::: {.fragment .fade-in-then-semi-out}

- Inspirado en el lenguaje comercial **S** y **S-plus** usados desde los años 70

:::

::: {.fragment .fade-in-then-semi-out}

- El lenguaje R se basa en funciones con argumentos, de sintaxis muy precisa, que interactúan con estructuras de datos.

:::

::: {.fragment .fade-in-then-semi-out}

- Además de las funciones básicas se incorporan otras a partir de paquetes. Al día de hoy existen 21582 paquetes publicados en CRAN.

:::


## LENGUAJE R

El instalador del lenguaje R trae incorporado un editor denominado R GUI que se visualiza cuando ejecutamos el acceso directo `R 4.4.1`:

![](images/RGui.PNG){fig-align="center" width="100%"}

## LENGUAJE R

<br>

::: incremental

Existen otros editores, o mejor llamados, entornos de desarrollo integrado (**IDE** - *Integrated Development Environment *) como:

- RStudio (open source - Posit)

- VS Code (Visual Studio Code - Microsoft)

- Positron (open source - Posit - en desarrollo)

:::

## R-COMMANDER

::: {.fragment .fade-in-then-semi-out}

- Interfaz gráfica con menúes desplegables y ventanas (*Point-and-Click*)

:::

::: {.fragment .fade-in-then-semi-out}

- Acceso a script con funciones (*ventana de instrucciones*)

:::

::: {.fragment .fade-in-then-semi-out}

- Posibilidad de extender con plugins (*paquetes especiales*)

:::

::: {.fragment .fade-in-then-semi-out}

- Desarrollada y mantenida por John Fox, profesor emérito de la Facultad de Ciencias Sociales de la Universidad de McMaster - Ontario, Canadá.

:::

## DESCARGA E INSTALACIÓN

1. Descargamos el instalador de R desde <https://cran.r-project.org/>

2. Instalamos el software R ejecutando el instalador **R-4.4.1-win.exe**

3. Ingresamos al R e instalamos el paquete **Rcmdr**, mediante `install.packages("Rcmdr", dependencies = T)`

4. Ejecutamos RCommander ejecutando `library(Rcmdr)`

. . . 

Vamos a mostrarlo...

## ENTORNO PRINCIPAL

![](images/Ventana_ppal.PNG){fig-align="center" width="100%"}


## ENTORNO Y MENÚES

::: incremental

- **Fichero**: para abrir archivos con instrucciones a ejecutar, o para guardar datos,
resultados, sintaxis, etc.
- **Editar**: las típicas opciones para cortar, pegar, borrar, etc.
- **Datos**: utilidades para trabajar con datos (creación de datos, importación de
variados formatos, recodificación de variables, etc.)
- **Estadísticos**: ejecución de métodos estadísticos
- **Gráficas**: gráficos con estética R base (graphics)

:::

## ENTORNO Y MENÚES

::: incremental

- **Modelos**: gestión modelos de regresión específicos para el análisis de datos.
- **Distribuciones**: probabilidades, cuantiles y gráficos de las distribuciones de
probabilidad más habituales.
- **Herramientas**: carga de librerías (paquetes) y opciones del entorno.
- **Ayuda**: ayuda y documentación sobre R-commander

- **KMggplot2**: gráficos modernos basados en paquete ggplot2. Curvas de
Kaplan-Meier, histogramas, Q-Q plot, etc.

::: 

## ARCHIVOS DE SISTEMA

<br>

::: {.fragment .fade-in-then-semi-out}

- Archivo de instrucciones (scripts de extensión **.R**)

:::


::: {.fragment .fade-in-then-semi-out}

- Archivo de resultados (salidas de consola de extensión **.txt**)

:::


::: {.fragment .fade-in-then-semi-out}

- Entorno de trabajo (formato propio de extensión **.RData**)

:::

::: {.fragment .fade-in-then-semi-out}

- Exportación de gráficos bajo estándar **.PNG**

:::


## IMPORTACIÓN DE DATOS

<br>

RCommander permite importar un variado conjunto de formatos de archivos de datos: 

:::: {.columns}

::: {.column width="50%"}

- Texto plano (.txt o .csv)
- SPSS
- SAS

:::

::: {.column width="50%"}

- Minitab
- Stata
- Microsoft Excel

:::

::::

## IMPORTACIÓN DE DATOS

<br>

![](images/Importar_datos.PNG){fig-align="center" width="100%"}

## DATOS 

Los datos con los que trabajamos tienen una estructura que se caracteriza por:

::: incremental

- Tener forma de tabla, con columnas y filas.
- Una tabla representa a una sola unidad de análisis
- Las columnas contienen a las variables.
- Las filas representan las observaciones
- Cada variable (columna) tiene un tipo de dato para todas las filas.

:::

## DATOS 

<br>

Orientación de variables y observaciones en una tabla "*ordenada*":

::: {.fragment .fade-left}

![](images/tidy.PNG){fig-align="center" width="100%"}

:::

## TIPO DE DATOS


Las tipos de datos con lo que trabaja el lenguaje R son:

:::: {.columns}

::: {.column width="50%"}

- Numérico (integer -int- o numeric -num-)
  - 36, 45.6, -709 
- Caracter (character -chr-)
  - *"A"*, *"Si"*, *"5"*, *"empleado"* 
- Factor (factor -fct-)
  - *"Alto"*, *"No"*

:::

::: {.column width="50%"}

- Lógico (logical -logi-)
  - `TRUE`, `FALSE`
- Fecha / hora (Date / datetime) 
  - *"2024-10-30"*, *"2024-10-30 18:30:00"*

:::

::::

## TIPO DE DATO FACTOR

<br>

Son un tipo de dato que se emplea para trabajar con variables que tienen un conjunto fijo de valores posibles (niveles). 

. . .

- Representan a variables categóricas y tienen etiquetas asociadas a valores enteros únicos (internos).

. . .

- Pueden estar ordenados o desordenados. 

  Por defecto, los niveles se ordenan alfabéticamente.


## SOBRE LOS DATOS

<br>

![](images/flujo.png){fig-align="center" width="100%"}

Las tablas de datos con las que trajaremos durante la cursada están ordenadas, depuradas y preprocesadas para sólo centrarnos en el análisis.

En la práctica, esto no ocurre y generalmente hay que dedicarle un largo tiempo al preproceso que nos lleva de los **datos crudos** a los **datos limpios**.


## DATOS FALTANTES (NA)

<br>

- El lenguaje R utiliza el valor reservado `NA` (Not Available), que significa *"No Disponible"*, para representar datos faltantes, perdidos o omitidos.

- Este tipo de datos tiene comportamiento particular que obliga a un tratamiento especial.

- En el marco de los modelos, cuando una variable tiene algún valor faltante (NA) en alguna observación, y participa del modelo de regresión, se omite automáticamente la observación completa.

## IMPORTACIÓN DE DATOS

::: incremental

- Archivos de texto plano
- Extensión **.txt** o **.csv**
- Con cabeceras de etiquetas de nombre de variable
- Separados por comas (**,**) o punto y coma **;**
- Revisar si existen múmeros con decimales y que separador utiliza

:::

## IMPORTACIÓN DE DATOS

:::: {.columns}

::: {.column width="50%"}

![](images/Datos1.PNG){fig-align="center" width="100%"}

:::

::: {.column width="50%"}

![](images/Datos2.PNG){fig-align="center" width="100%"}

:::

::::

## EXPLORACIÓN 

<br>

Una tarea inicial, luego de haber importado una tabla de datos, es explorar su contenido.

La forma más sencilla de realizarla es solicitar que R nos muestre la estructura. Para esto, escribimos y Ejecutamos la siguiente línea de código:

<br>

```{r}
#| echo: true
#| eval: false

str(bajo_peso)

```

## EXPLORACIÓN 

<br>

En la ventana de resultados visualizaremos la estructura de la tabla de datos:

![](images/estructura.PNG){fig-align="center" width="100%"}

## DETECCIÓN DE VALORES NA

<br>

Otra exploración que realizamos al inicio es la detección de valores faltantes en las variables del conjunto de datos.

Pulsando sobre `Estadísticos -> Resúmenes -> Número de observaciones ausentes`.

<br>

![](images/valores_NA.PNG){fig-align="center" width="100%"}

## GESTION DE DATOS

El menú `Datos -> Modificar variables del conjunto de datos activo` nos ofrece realizar las siguientes gestiones con datos:


::: incremental

- Recodificar variables
- Incorporar una nueva variable con valor calculado
- Convertir variables numéricas a factor
- Reordenar niveles de un factor
- Segmentar variable numérica
- Renombrar o eliminar variables

:::

## FACTORES

En situaciones donde la categoría de una variable cualitativa se codificó numéricamente es posible que necesitemos convertirla a factor antes de trabajar con ella.

![](images/Numerica-factor1.PNG){fig-align="center"}


## FACTORES

<br>

:::: {.columns}

::: {.column width="50%"}

![](images/Numerica-factor2.PNG){fig-align="center" width="100%"}

:::

::: {.column width="50%"}

![](images/Numerica-factor3.PNG){fig-align="center" width="100%"}

:::

::::


## FACTORES

Como en todas las situaciones donde utilicemos algún opción del menú, encontraremos en la ventana de instrucciones y en resultados la ejecución del código de R correspondiente:

![](images/Numerica-factor4.PNG){fig-align="center"  width="100%"}

Para verificar el cambio a factor de la variable y sus niveles, podemos escribir directamente en la ventana de instrucciones `levels(nombre_datos$nombre_variable)`

![](images/Numerica-factor5.PNG){fig-align="center"  width="50%"}

## FACTORES

Otra tarea habitual, sobre todo en los modelados estadísticos, es reordenar
niveles de un factor (necesario para definir el nivel de referencia de un predictor
categórico).

:::: {.columns}

::: {.column width="50%"}

![](images/Reordenar_factor1.PNG){fig-align="center" width="100%"}

:::

::: {.column width="50%"}

![](images/Reordenar_factor2.PNG){fig-align="center" width="80%"}

:::

::::

## FACTORES

Visualizaremos el código en la ventana de instrucciones y en resultados: 

![](images/Reordenar_factor3.PNG){fig-align="center"  width="100%"}

Verificamos el reordenamiento de niveles: `levels(nombre_datos$nombre_variable)`

![](images/Reordenar_factor4.PNG){fig-align="center"  width="30%"}

Observamos que los niveles cambiaron y que no siguen el ordenamiento alfabetico predeterminado.

## ESTADISTICOS

Las funciones para el análisis estadístico las encontramos en el menú

![](images/Estadisticos.PNG){fig-align="center"  width="100%"}


## ESTADISTICOS

<br>

Algunas de las opciones que usaremos durante la cursada son:

<br>

:::: {.columns}

::: {.column width="40%"}

![](images/Estadisticos2.PNG){fig-align="center" width="100%"}

:::

::: {.column width="60%"}

![](images/Estadisticos3.PNG){fig-align="center" width="80%"}

:::

::::

## ESTADISTICOS

<br>

Estos menúes nos van a permitir explorar estadísticamente los datos y conocer la distribución de las variables de interés a partir de:

::: incremental

- Resumir datos mediante estadísticos
- Resumir datos mediante gráficos
- Detectar patrones y relaciones entre variables
- Detectar valores atípicos (outlier) e influyentes

:::

## ESTADISTICOS

Por ejemplo, vamos a poder describir una variable mediante:

:::: {.columns}

::: {.column width="50%"}

**Cuantitativas**

- Tendencial central: media, mediana
- Dispersión: varianza, desvío estándar, intervalo intercuartílico
- Posición: mínimo, máximo, quartiles


:::

::: {.column width="50%"}

**Cualitativas**

- Tabla de frecuencias absolutas 
- Tabla de frecuencias relativas

:::

::::


## ESTADISTICOS

Cuando ajustemos modelos de regresión utilizaremos las opciones:

![](images/Estadisticos4.PNG){fig-align="center" width="80%"}

## GRAFICOS

Los gráficos estándar que RCommander trae incorporados se basan en el sistema gráfico base del lenguaje R. Existe un sistema más moderno proveniente de la *gramática de gráficos* incluido en un paquete que se denomina `ggplot2`.

. . .

El **plugin KMggplot2** extendiende las funciones de RCommander e incluye también curvas de Kaplan Meier que verán en el módulo siguiente con el análisis de supervivencia.

. . . 

Este plugin, y probablemente algunos otros que necesitarán en el futuro, debe instalarse antes de activarlo en RCommander. 


## PLUGINS

Los plugins de RCommander son librerías del lenguaje R que descargaremos desde el sitio oficial CRAN.

- Todos los paquetes que son plugin de RCommander comienzan con **"RcmdrPlugin."**.

- Actualmente hay 34 extensiones en forma de plugin para RCommander.

- El código para instalarlos es similar al de cualquier paquete de R.

![](images/Instalacion_plugin.PNG){fig-align="center" width="50%"}


## PLUGINS

Luego, cuando ingresamos en el RCommander debemos activarlo:

:::: {.columns}

::: {.column width="45%"}

![](images/Instalacion_plugin2.PNG){fig-align="center" width="100%"}

:::

::: {.column width="55%"}

![](images/Instalacion_plugin3.PNG){fig-align="center" width="100%"}

:::

::::


## PLUGINS

A continuación el sistema nos solicitará reinicar el RCommander y cuando vuelva a abrirse aparecerá el menú asociado al plugin activado.

:::: {.columns}

::: {.column width="50%"}

![](images/Instalacion_plugin4.PNG){fig-align="center" width="100%"}

:::

::: {.column width="50%"}

![](images/Instalacion_plugin5.PNG){fig-align="center" width="100%"}

:::

::::

## GRAFICOS {.smaller}

La extensión KMggplot2 nos va a permitir hacer:

::: incremental

- Histogramas (variable cuantitativa según categórica)
- Q-Q plot (para ajuste de distintas distribuciones)
- Box plot / violin plot (variable cuantitativa según categórica)
- Scatter plot (dos variables cuantitativas)
- Scatter matrix (tres o más variables cuantitativas)
- Line chart (dos variables cuantitativas)
- Gráfica de sectores (variable categórica)
- Bar chart (variable categórica)
- Curva de Kaplan Meier (análisis de supervivencia)

:::

## GRAFICOS

<br>

:::: {.columns}

::: {.column width="50%"}

![](images/Histograma.PNG){fig-align="center" width="100%"}

:::

::: {.column width="50%"}

![](images/Boxplot.PNG){fig-align="center" width="100%"}

:::

::::

## GRAFICOS

<br>

:::: {.columns}

::: {.column width="50%"}

![](images/QQplot.PNG){fig-align="center" width="100%"}

:::

::: {.column width="50%"}

![](images/Scatter.PNG){fig-align="center" width="100%"}

:::

::::

## GRAFICOS

<br>

:::: {.columns}

::: {.column width="50%"}

En el marco de la exploración descriptiva de los datos, es muy valiosa la información sobre la distribución de una variable cuantitativa que nos brindan los boxplots.

:::

::: {.column width="50%"}

![](images/boxplot_explicado.png){fig-align="center" width="100%"}

:::

::::

## GRAFICOS

Otro gráfico importante es el **Q-Q plot** (gráfico quantil-quantil) para ver si la distribución de la variable cuantitativa se aproxima a una distribución teórica (Normal).

![](images/qqplot_explicado.webp){fig-align="center" width="100%"}

## MODELOS

<br>

::: incremental

- Los modelos se ajustan desde la opción del menú `Estadísticos -> Ajuste de modelos`

- La sintaxis en R para los modelos estadísticos se basa en la función genérica **formula**.

- Se pueden ajustar varios modelos de forman secuencial vinculándose a nombres diferentes.

- Luego se gestionan desde el menú `Modelos` indicando previamente cuál es el nombre del **modelo activo.**

::: 

## MODELOS

::: {.fragment .fade-in-then-semi-out}

La sintaxis fórmula se utiliza para construir expresiones compactas utilizando como operador el caracter virgulilla `~`

:::

::: {.fragment .fade-in-then-semi-out}

La expresión básica es `y ~ modelo` y se interpreta como que la variable de respuesta `y` está modelada por un predictor lineal especificado simbólicamente por `modelo`.

:::

::: {.fragment .fade-in-then-semi-out}

El `modelo` esta compuesto por uno o más términos (variables explicativas y/o predictoras) separadas por operadores aditivos `+`

:::

::: {.fragment .fade-in-then-semi-out}

Para otros términos, como el de interacción, se utiliza el operador multiplicativo `*`

:::

## GUARDADO DE ARCHIVOS

- Es conveniente guardar los archivos de trabajo de la sesión de RCommander

  - Archivo de instrucciones (`.R`)
  
    Se puede cargar y volver a ejecutar en el futuro.
  
  - Archivo de resultados (`.txt`)
  
    Podemos copiar resultados desde fuera de **RCommander**
  
- Las opciones se encuentra en el menú `Ficheros`  

## EXPORTACION DE DATOS

<br>

- Desde `Datos -> Conjunto de datos activos -> Exportar el conjunto de datos activo…` exportamos la tabla de datos con las modificaciones y/o agregados que realizamos durante la gestión con **RCommander**.

## EXPORTACION DE DATOS

![](images/Exportacion.PNG){fig-align="center" width="55%"}

## RESUMEN

```{dot}
//| echo: false
digraph G {
 node [style = filled, fontcolor = "white"];
 edge [arrowhead=none,arrowtail=none];
    n0 [shape = tab, 
    label = "Fichero",
    color = "#1f53ad"];
    
    n1 [shape = tab, 
    label = "Datos", 
    color = "#1f53ad"];
    
    n2 [shape = tab, 
    label = "Estadísticos", 
    color = "#1f53ad"];
    
    n3 [shape = tab, 
    label = "Modelos",
    color = "#1f53ad"];
    
    n4 [shape = tab, 
    label = "KMggplot2", 
    color = "#1f53ad"];
    
    n5 [shape = tab, 
    label = "Herramientas", 
    color = "#1f53ad"];
    
    n6 [shape = note, 
    label = "Directorio de trabajo",
    color = "#969127"];
    
    n7 [shape = note, 
    label = "Gestión de archivos \n de sistema",
    color = "#969127"];
    
    n8 [shape = note, 
    label = "Importar datos",
    color = "#969127"];
    
    n9 [shape = note, 
    label = "Modificar variables",
    color = "#969127"];
    
    n10 [shape = note, 
    label = "Resúmenes",
    color = "#969127"];
    
    n11 [shape = note, 
    label = "Ajuste de modelos",
    color = "#969127"];
    
    n12 [shape = note, 
    label = "Gestión de modelo \n activo",
    color = "#969127"];
    
    n13 [shape = note, 
    label = "Cargar paquetes",
    color = "#969127"];
    
    n14 [shape = note, 
    label = "Cargar plugins",
    color = "#969127"];
    
    n15 [shape = note, 
    label = "Gráficos", 
    color = "#969127"];
    
    n0 -> n6;
    n6 -> n7;
    
    n1 -> n8;
    n8 -> n9;
    
    n2 -> n10;
    n10 -> n11;

    n3 -> n12;
    
    n4 -> n15;
    
    n5 -> n13;
    n13 -> n14;
}

```

## RESUMEN

```{dot}
//| echo: false
digraph G {
 node [style = filled, fontcolor = "white"];
    n0 [shape = box, 
    label = "Importación de \n datos", 
    color = "#0060ff"];
    
    n1 [shape = ellipse, 
    label = "Análisis exploratorio", 
    color = "#8b00ff"];
    
    n2 [shape = box, 
    label = "Análisis descriptivo \n uni-bivariado", 
    color = "#117104"];
    
    n3 [shape = box, 
    label = "Visualización \n de gráficos",
    color = "#117104"];
    
    n4 [shape = box, 
    label = "Modelado \n bivariado", 
    color = "#ab3907"];
    
    n5 [shape = box, 
    label = "Modelado \n multivariado",
    color = "#ab3907"];
    
    n0 -> n1;
    n1 -> n2;
    
    n1 -> n3;
    n1 -> n4;
    n4 -> n5; 

}

```


